// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RepairsApi.V2.Infrastructure;

namespace RepairsApi.V2.Infrastructure.Migrations
{
    [DbContext(typeof(RepairsContext))]
    [Migration("20210114112429_WorkOrderComplete2")]
    partial class WorkOrderComplete2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("RepairsApi.V2.Infrastructure.AdditionalWork", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("AdditionalWorkOrderId")
                        .HasColumnName("additional_work_order_id")
                        .HasColumnType("integer");

                    b.Property<string>("ReasonRequired")
                        .HasColumnName("reason_required")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("pk_additional_work");

                    b.HasIndex("AdditionalWorkOrderId")
                        .HasName("ix_additional_work_additional_work_order_id");

                    b.ToTable("additional_work");
                });

            modelBuilder.Entity("RepairsApi.V2.Infrastructure.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("AddressLine")
                        .HasColumnName("address_line")
                        .HasColumnType("text");

                    b.Property<string>("BuildingName")
                        .HasColumnName("building_name")
                        .HasColumnType("text");

                    b.Property<string>("BuildingNumber")
                        .HasColumnName("building_number")
                        .HasColumnType("text");

                    b.Property<string>("CityName")
                        .HasColumnName("city_name")
                        .HasColumnType("text");

                    b.Property<string>("ComplexName")
                        .HasColumnName("complex_name")
                        .HasColumnType("text");

                    b.Property<int?>("Country")
                        .HasColumnName("country")
                        .HasColumnType("integer");

                    b.Property<string>("Department")
                        .HasColumnName("department")
                        .HasColumnType("text");

                    b.Property<string>("Floor")
                        .HasColumnName("floor")
                        .HasColumnType("text");

                    b.Property<string>("Plot")
                        .HasColumnName("plot")
                        .HasColumnType("text");

                    b.Property<string>("PostalCode")
                        .HasColumnName("postal_code")
                        .HasColumnType("text");

                    b.Property<string>("Postbox")
                        .HasColumnName("postbox")
                        .HasColumnType("text");

                    b.Property<string>("Room")
                        .HasColumnName("room")
                        .HasColumnType("text");

                    b.Property<string>("StreetName")
                        .HasColumnName("street_name")
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .HasColumnName("type")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("pk_address");

                    b.ToTable("address");
                });

            modelBuilder.Entity("RepairsApi.V2.Infrastructure.AlertRegardingLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Comments")
                        .HasColumnName("comments")
                        .HasColumnType("text");

                    b.Property<int?>("Type")
                        .HasColumnName("type")
                        .HasColumnType("integer");

                    b.Property<int?>("WorkOrderId")
                        .HasColumnName("work_order_id")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("pk_location_alerts");

                    b.HasIndex("WorkOrderId")
                        .HasName("ix_location_alerts_work_order_id");

                    b.ToTable("location_alerts");
                });

            modelBuilder.Entity("RepairsApi.V2.Infrastructure.AlertRegardingPerson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Comments")
                        .HasColumnName("comments")
                        .HasColumnType("text");

                    b.Property<int?>("Type")
                        .HasColumnName("type")
                        .HasColumnType("integer");

                    b.Property<int?>("WorkOrderId")
                        .HasColumnName("work_order_id")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("pk_person_alerts");

                    b.HasIndex("WorkOrderId")
                        .HasName("ix_person_alerts_work_order_id");

                    b.ToTable("person_alerts");
                });

            modelBuilder.Entity("RepairsApi.V2.Infrastructure.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("Date")
                        .HasColumnName("date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("TimeOfDayId")
                        .HasColumnName("time_of_day_id")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("pk_appointment");

                    b.HasIndex("TimeOfDayId")
                        .HasName("ix_appointment_time_of_day_id");

                    b.ToTable("appointment");
                });

            modelBuilder.Entity("RepairsApi.V2.Infrastructure.AppointmentTimeOfDay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("EarliestArrivalTime")
                        .HasColumnName("earliest_arrival_time")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("LatestArrivalTime")
                        .HasColumnName("latest_arrival_time")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("LatestCompletionTime")
                        .HasColumnName("latest_completion_time")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("pk_appointment_time_of_day");

                    b.ToTable("appointment_time_of_day");
                });

            modelBuilder.Entity("RepairsApi.V2.Infrastructure.Categorization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Category")
                        .HasColumnName("category")
                        .HasColumnType("text");

                    b.Property<int?>("ScoreSetId")
                        .HasColumnName("score_set_id")
                        .HasColumnType("integer");

                    b.Property<string>("SubCategory")
                        .HasColumnName("sub_category")
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .HasColumnName("type")
                        .HasColumnType("text");

                    b.Property<string>("VersionUsed")
                        .HasColumnName("version_used")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("pk_categorization");

                    b.HasIndex("ScoreSetId")
                        .HasName("ix_categorization_score_set_id");

                    b.ToTable("categorization");
                });

            modelBuilder.Entity("RepairsApi.V2.Infrastructure.Communication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("ChannelId")
                        .HasColumnName("channel_id")
                        .HasColumnType("integer");

                    b.Property<string>("Value")
                        .HasColumnName("value")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("pk_communication");

                    b.HasIndex("ChannelId")
                        .HasName("ix_communication_channel_id");

                    b.ToTable("communication");
                });

            modelBuilder.Entity("RepairsApi.V2.Infrastructure.CommunicationChannel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("Code")
                        .HasColumnName("code")
                        .HasColumnType("integer");

                    b.Property<int?>("Medium")
                        .HasColumnName("medium")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("pk_communication_channel");

                    b.ToTable("communication_channel");
                });

            modelBuilder.Entity("RepairsApi.V2.Infrastructure.CustomerSatisfaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("PartyCarryingOutSurveyId")
                        .HasColumnName("party_carrying_out_survey_id")
                        .HasColumnType("integer");

                    b.Property<int?>("PartyProvidingFeedbackId")
                        .HasColumnName("party_providing_feedback_id")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("pk_customer_satisfaction");

                    b.HasIndex("PartyCarryingOutSurveyId")
                        .HasName("ix_customer_satisfaction_party_carrying_out_survey_id");

                    b.HasIndex("PartyProvidingFeedbackId")
                        .HasName("ix_customer_satisfaction_party_providing_feedback_id");

                    b.ToTable("customer_satisfaction");
                });

            modelBuilder.Entity("RepairsApi.V2.Infrastructure.Dependency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTimeOffset?>("Duration")
                        .HasColumnName("duration")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("Type")
                        .HasColumnName("type")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("pk_dependency");

                    b.ToTable("dependency");
                });

            modelBuilder.Entity("RepairsApi.V2.Infrastructure.GeographicalLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<double?>("Elevation")
                        .HasColumnName("elevation")
                        .HasColumnType("double precision");

                    b.Property<string>("ElevationReferenceSystem")
                        .HasColumnName("elevation_reference_system")
                        .HasColumnType("text");

                    b.Property<double?>("Latitude")
                        .HasColumnName("latitude")
                        .HasColumnType("double precision");

                    b.Property<double?>("Longitude")
                        .HasColumnName("longitude")
                        .HasColumnType("double precision");

                    b.Property<string>("PositionalAccuracy")
                        .HasColumnName("positional_accuracy")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("pk_geographical_location");

                    b.ToTable("geographical_location");
                });

            modelBuilder.Entity("RepairsApi.V2.Infrastructure.Identification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Number")
                        .HasColumnName("number")
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .HasColumnName("type")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("pk_identification");

                    b.ToTable("identification");
                });

            modelBuilder.Entity("RepairsApi.V2.Infrastructure.JobStatusUpdate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("AdditionalWorkId")
                        .HasColumnName("additional_work_id")
                        .HasColumnType("integer");

                    b.Property<string>("Comments")
                        .HasColumnName("comments")
                        .HasColumnType("text");

                    b.Property<int?>("CustomerCommunicationChannelAttemptedId")
                        .HasColumnName("customer_communication_channel_attempted_id")
                        .HasColumnType("integer");

                    b.Property<int?>("CustomerFeedbackId")
                        .HasColumnName("customer_feedback_id")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("EventTime")
                        .HasColumnName("event_time")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("MoreSpecificSORCodeId")
                        .HasColumnName("more_specific_sor_code_id")
                        .HasColumnType("uuid");

                    b.Property<string>("OtherType")
                        .HasColumnName("other_type")
                        .HasColumnType("text");

                    b.Property<int?>("RefinedAppointmentWindowId")
                        .HasColumnName("refined_appointment_window_id")
                        .HasColumnType("integer");

                    b.Property<int?>("RelatedWorkOrderId")
                        .HasColumnName("related_work_order_id")
                        .HasColumnType("integer");

                    b.Property<int?>("TypeCode")
                        .HasColumnName("type_code")
                        .HasColumnType("integer");

                    b.Property<int?>("WorkOrderCompleteId")
                        .HasColumnName("work_order_complete_id")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("pk_job_status_update");

                    b.HasIndex("AdditionalWorkId")
                        .HasName("ix_job_status_update_additional_work_id");

                    b.HasIndex("CustomerCommunicationChannelAttemptedId")
                        .HasName("ix_job_status_update_customer_communication_channel_attempted_");

                    b.HasIndex("CustomerFeedbackId")
                        .HasName("ix_job_status_update_customer_feedback_id");

                    b.HasIndex("MoreSpecificSORCodeId")
                        .HasName("ix_job_status_update_more_specific_sor_code_id");

                    b.HasIndex("RefinedAppointmentWindowId")
                        .HasName("ix_job_status_update_refined_appointment_window_id");

                    b.HasIndex("RelatedWorkOrderId")
                        .HasName("ix_job_status_update_related_work_order_id");

                    b.HasIndex("WorkOrderCompleteId")
                        .HasName("ix_job_status_update_work_order_complete_id");

                    b.ToTable("job_status_update");
                });

            modelBuilder.Entity("RepairsApi.V2.Infrastructure.Operative", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("PersonId")
                        .HasColumnName("person_id")
                        .HasColumnType("integer");

                    b.Property<int?>("WorkOrderCompleteId")
                        .HasColumnName("work_order_complete_id")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("pk_operative");

                    b.HasIndex("PersonId")
                        .HasName("ix_operative_person_id");

                    b.HasIndex("WorkOrderCompleteId")
                        .HasName("ix_operative_work_order_complete_id");

                    b.ToTable("operative");
                });

            modelBuilder.Entity("RepairsApi.V2.Infrastructure.Party", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .HasColumnName("role")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("pk_party");

                    b.ToTable("party");
                });

            modelBuilder.Entity("RepairsApi.V2.Infrastructure.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("IdentificationId")
                        .HasColumnName("identification_id")
                        .HasColumnType("integer");

                    b.Property<int?>("JobStatusUpdateId")
                        .HasColumnName("job_status_update_id")
                        .HasColumnType("integer");

                    b.Property<int?>("NameId")
                        .HasColumnName("name_id")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("pk_person");

                    b.HasIndex("IdentificationId")
                        .HasName("ix_person_identification_id");

                    b.HasIndex("JobStatusUpdateId")
                        .HasName("ix_person_job_status_update_id");

                    b.HasIndex("NameId")
                        .HasName("ix_person_name_id");

                    b.ToTable("person");
                });

            modelBuilder.Entity("RepairsApi.V2.Infrastructure.PersonName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Full")
                        .HasColumnName("full")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("pk_person_name");

                    b.ToTable("person_name");
                });

            modelBuilder.Entity("RepairsApi.V2.Infrastructure.Point", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<double?>("Easting")
                        .HasColumnName("easting")
                        .HasColumnType("double precision");

                    b.Property<int?>("GeographicalLocationId")
                        .HasColumnName("geographical_location_id")
                        .HasColumnType("integer");

                    b.Property<double?>("Northing")
                        .HasColumnName("northing")
                        .HasColumnType("double precision");

                    b.Property<int>("Sequence")
                        .HasColumnName("sequence")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("pk_point");

                    b.HasIndex("GeographicalLocationId")
                        .HasName("ix_point_geographical_location_id");

                    b.ToTable("point");
                });

            modelBuilder.Entity("RepairsApi.V2.Infrastructure.PostalAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("AddressId")
                        .HasColumnName("address_id")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("pk_postal_address");

                    b.HasIndex("AddressId")
                        .HasName("ix_postal_address_address_id");

                    b.ToTable("postal_address");
                });

            modelBuilder.Entity("RepairsApi.V2.Infrastructure.PropertyAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("AddressId")
                        .HasColumnName("address_id")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("pk_property_address");

                    b.HasIndex("AddressId")
                        .HasName("ix_property_address_address_id");

                    b.ToTable("property_address");
                });

            modelBuilder.Entity("RepairsApi.V2.Infrastructure.PropertyClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("AddressId")
                        .HasColumnName("address_id")
                        .HasColumnType("integer");

                    b.Property<int?>("GeographicalLocationId")
                        .HasColumnName("geographical_location_id")
                        .HasColumnType("integer");

                    b.Property<string>("MasterKeySystem")
                        .HasColumnName("master_key_system")
                        .HasColumnType("text");

                    b.Property<int?>("SiteId")
                        .HasColumnName("site_id")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("pk_property_class");

                    b.HasIndex("AddressId")
                        .HasName("ix_property_class_address_id");

                    b.HasIndex("GeographicalLocationId")
                        .HasName("ix_property_class_geographical_location_id");

                    b.HasIndex("SiteId")
                        .HasName("ix_property_class_site_id");

                    b.ToTable("property_class");
                });

            modelBuilder.Entity("RepairsApi.V2.Infrastructure.RateScheduleItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<string>("CustomCode")
                        .HasColumnName("custom_code")
                        .HasColumnType("text");

                    b.Property<string>("CustomName")
                        .HasColumnName("custom_name")
                        .HasColumnType("text");

                    b.Property<string>("M3NHFSORCode")
                        .HasColumnName("m3nhfsor_code")
                        .HasColumnType("text");

                    b.Property<Guid?>("WorkElementId")
                        .HasColumnName("work_element_id")
                        .HasColumnType("uuid");

                    b.Property<int?>("WorkOrderCompleteId")
                        .HasColumnName("work_order_complete_id")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("pk_rate_schedule_items");

                    b.HasIndex("WorkElementId")
                        .HasName("ix_rate_schedule_items_work_element_id");

                    b.HasIndex("WorkOrderCompleteId")
                        .HasName("ix_rate_schedule_items_work_order_complete_id");

                    b.ToTable("rate_schedule_items");
                });

            modelBuilder.Entity("RepairsApi.V2.Infrastructure.Score", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Comment")
                        .HasColumnName("comment")
                        .HasColumnType("text");

                    b.Property<string>("CurrentScore")
                        .HasColumnName("current_score")
                        .HasColumnType("text");

                    b.Property<string>("FollowUpQuestion")
                        .HasColumnName("follow_up_question")
                        .HasColumnType("text");

                    b.Property<string>("Maximum")
                        .HasColumnName("maximum")
                        .HasColumnType("text");

                    b.Property<string>("Minimum")
                        .HasColumnName("minimum")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("text");

                    b.Property<int?>("ScoreSetId")
                        .HasColumnName("score_set_id")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("pk_score");

                    b.HasIndex("ScoreSetId")
                        .HasName("ix_score_score_set_id");

                    b.ToTable("score");
                });

            modelBuilder.Entity("RepairsApi.V2.Infrastructure.ScoreSet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("CustomerSatisfactionId")
                        .HasColumnName("customer_satisfaction_id")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DateTime")
                        .HasColumnName("date_time")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("text");

                    b.Property<DateTime?>("PreviousDateTime")
                        .HasColumnName("previous_date_time")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id")
                        .HasName("pk_score_set");

                    b.HasIndex("CustomerSatisfactionId")
                        .HasName("ix_score_set_customer_satisfaction_id");

                    b.ToTable("score_set");
                });

            modelBuilder.Entity("RepairsApi.V2.Infrastructure.Site", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("GeographicalLocationId")
                        .HasColumnName("geographical_location_id")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("pk_site");

                    b.HasIndex("GeographicalLocationId")
                        .HasName("ix_site_geographical_location_id");

                    b.ToTable("site");
                });

            modelBuilder.Entity("RepairsApi.V2.Infrastructure.Trade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("Code")
                        .HasColumnName("code")
                        .HasColumnType("integer");

                    b.Property<string>("CustomCode")
                        .HasColumnName("custom_code")
                        .HasColumnType("text");

                    b.Property<string>("CustomName")
                        .HasColumnName("custom_name")
                        .HasColumnType("text");

                    b.Property<int?>("OperativeId")
                        .HasColumnName("operative_id")
                        .HasColumnType("integer");

                    b.Property<Guid?>("WorkElementId")
                        .HasColumnName("work_element_id")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("pk_trade");

                    b.HasIndex("OperativeId")
                        .HasName("ix_trade_operative_id");

                    b.HasIndex("WorkElementId")
                        .HasName("ix_trade_work_element_id");

                    b.ToTable("trade");
                });

            modelBuilder.Entity("RepairsApi.V2.Infrastructure.Unit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("AddressId")
                        .HasColumnName("address_id")
                        .HasColumnType("integer");

                    b.Property<int?>("PropertyClassId")
                        .HasColumnName("property_class_id")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("pk_unit");

                    b.HasIndex("AddressId")
                        .HasName("ix_unit_address_id");

                    b.HasIndex("PropertyClassId")
                        .HasName("ix_unit_property_class_id");

                    b.ToTable("unit");
                });

            modelBuilder.Entity("RepairsApi.V2.Infrastructure.WorkClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("WorkClassCode")
                        .HasColumnName("work_class_code")
                        .HasColumnType("integer");

                    b.Property<string>("WorkClassDescription")
                        .HasColumnName("work_class_description")
                        .HasColumnType("text");

                    b.Property<int?>("WorkClassSubTypeId")
                        .HasColumnName("work_class_sub_type_id")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("pk_work_class");

                    b.HasIndex("WorkClassSubTypeId")
                        .HasName("ix_work_class_work_class_sub_type_id");

                    b.ToTable("work_class");
                });

            modelBuilder.Entity("RepairsApi.V2.Infrastructure.WorkClassSubType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("WorkClassSubTypeDescription")
                        .HasColumnName("work_class_sub_type_description")
                        .HasColumnType("text");

                    b.Property<string>("WorkClassSubTypeName")
                        .HasColumnName("work_class_sub_type_name")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("pk_work_class_sub_type");

                    b.ToTable("work_class_sub_type");
                });

            modelBuilder.Entity("RepairsApi.V2.Infrastructure.WorkElement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<bool?>("ContainsCapitalWork")
                        .HasColumnName("contains_capital_work")
                        .HasColumnType("boolean");

                    b.Property<int?>("JobStatusUpdateId")
                        .HasColumnName("job_status_update_id")
                        .HasColumnType("integer");

                    b.Property<int?>("OperativeId")
                        .HasColumnName("operative_id")
                        .HasColumnType("integer");

                    b.Property<int?>("ServiceChargeSubject")
                        .HasColumnName("service_charge_subject")
                        .HasColumnType("integer");

                    b.Property<int?>("WorkOrderCompleteId")
                        .HasColumnName("work_order_complete_id")
                        .HasColumnType("integer");

                    b.Property<int?>("WorkOrderId")
                        .HasColumnName("work_order_id")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("pk_work_elements");

                    b.HasIndex("JobStatusUpdateId")
                        .HasName("ix_work_elements_job_status_update_id");

                    b.HasIndex("OperativeId")
                        .HasName("ix_work_elements_operative_id");

                    b.HasIndex("WorkOrderCompleteId")
                        .HasName("ix_work_elements_work_order_complete_id");

                    b.HasIndex("WorkOrderId")
                        .HasName("ix_work_elements_work_order_id");

                    b.ToTable("work_elements");
                });

            modelBuilder.Entity("RepairsApi.V2.Infrastructure.WorkElementDependency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("DependencyId")
                        .HasColumnName("dependency_id")
                        .HasColumnType("integer");

                    b.Property<Guid?>("DependsOnWorkElementId")
                        .HasColumnName("depends_on_work_element_id")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("pk_work_element_dependency");

                    b.HasIndex("DependencyId")
                        .HasName("ix_work_element_dependency_dependency_id");

                    b.HasIndex("DependsOnWorkElementId")
                        .HasName("ix_work_element_dependency_depends_on_work_element_id");

                    b.ToTable("work_element_dependency");
                });

            modelBuilder.Entity("RepairsApi.V2.Infrastructure.WorkOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:IdentitySequenceOptions", "'10000000', '1', '', '', 'False', '1'")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("AccessInformationId")
                        .HasColumnName("access_information_id")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DateReported")
                        .HasColumnName("date_reported")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DescriptionOfWork")
                        .HasColumnName("description_of_work")
                        .HasColumnType("text");

                    b.Property<double?>("EstimatedLaborHours")
                        .HasColumnName("estimated_labor_hours")
                        .HasColumnType("double precision");

                    b.Property<string>("LocationOfRepair")
                        .HasColumnName("location_of_repair")
                        .HasColumnType("text");

                    b.Property<string>("ParkingArrangements")
                        .HasColumnName("parking_arrangements")
                        .HasColumnType("text");

                    b.Property<int?>("SiteId")
                        .HasColumnName("site_id")
                        .HasColumnType("integer");

                    b.Property<int?>("WorkClassId")
                        .HasColumnName("work_class_id")
                        .HasColumnType("integer");

                    b.Property<int?>("WorkOrderCompleteId")
                        .HasColumnName("work_order_complete_id")
                        .HasColumnType("integer");

                    b.Property<Guid?>("WorkPriorityId")
                        .HasColumnName("work_priority_id")
                        .HasColumnType("uuid");

                    b.Property<int?>("WorkType")
                        .HasColumnName("work_type")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("pk_work_orders");

                    b.HasIndex("AccessInformationId")
                        .HasName("ix_work_orders_access_information_id");

                    b.HasIndex("SiteId")
                        .HasName("ix_work_orders_site_id");

                    b.HasIndex("WorkClassId")
                        .HasName("ix_work_orders_work_class_id");

                    b.HasIndex("WorkOrderCompleteId")
                        .HasName("ix_work_orders_work_order_complete_id");

                    b.HasIndex("WorkPriorityId")
                        .HasName("ix_work_orders_work_priority_id");

                    b.ToTable("work_orders");
                });

            modelBuilder.Entity("RepairsApi.V2.Infrastructure.WorkOrderAccessInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("pk_work_order_access_information");

                    b.ToTable("work_order_access_information");
                });

            modelBuilder.Entity("RepairsApi.V2.Infrastructure.WorkOrderComplete", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("WorkOrderId")
                        .HasColumnName("work_order_id")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("pk_work_order_completes");

                    b.HasIndex("WorkOrderId")
                        .HasName("ix_work_order_completes_work_order_id");

                    b.ToTable("work_order_completes");
                });

            modelBuilder.Entity("RepairsApi.V2.Infrastructure.WorkPriority", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<string>("Comments")
                        .HasColumnName("comments")
                        .HasColumnType("text");

                    b.Property<double?>("NumberOfDays")
                        .HasColumnName("number_of_days")
                        .HasColumnType("double precision");

                    b.Property<int?>("PriorityCode")
                        .HasColumnName("priority_code")
                        .HasColumnType("integer");

                    b.Property<string>("PriorityDescription")
                        .HasColumnName("priority_description")
                        .HasColumnType("text");

                    b.Property<DateTime?>("RequiredCompletionDateTime")
                        .HasColumnName("required_completion_date_time")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id")
                        .HasName("pk_work_priorities");

                    b.ToTable("work_priorities");
                });

            modelBuilder.Entity("RepairsApi.V2.Infrastructure.AdditionalWork", b =>
                {
                    b.HasOne("RepairsApi.V2.Infrastructure.WorkOrder", "AdditionalWorkOrder")
                        .WithMany()
                        .HasForeignKey("AdditionalWorkOrderId")
                        .HasConstraintName("fk_additional_work_work_orders_additional_work_order_id");
                });

            modelBuilder.Entity("RepairsApi.V2.Infrastructure.AlertRegardingLocation", b =>
                {
                    b.HasOne("RepairsApi.V2.Infrastructure.WorkOrder", null)
                        .WithMany("LocationAlert")
                        .HasForeignKey("WorkOrderId")
                        .HasConstraintName("fk_location_alerts_work_orders_work_order_id");
                });

            modelBuilder.Entity("RepairsApi.V2.Infrastructure.AlertRegardingPerson", b =>
                {
                    b.HasOne("RepairsApi.V2.Infrastructure.WorkOrder", null)
                        .WithMany("PersonAlert")
                        .HasForeignKey("WorkOrderId")
                        .HasConstraintName("fk_person_alerts_work_orders_work_order_id");
                });

            modelBuilder.Entity("RepairsApi.V2.Infrastructure.Appointment", b =>
                {
                    b.HasOne("RepairsApi.V2.Infrastructure.AppointmentTimeOfDay", "TimeOfDay")
                        .WithMany()
                        .HasForeignKey("TimeOfDayId")
                        .HasConstraintName("fk_appointment_appointment_time_of_day_time_of_day_id");
                });

            modelBuilder.Entity("RepairsApi.V2.Infrastructure.Categorization", b =>
                {
                    b.HasOne("RepairsApi.V2.Infrastructure.ScoreSet", null)
                        .WithMany("Categorization")
                        .HasForeignKey("ScoreSetId")
                        .HasConstraintName("fk_categorization_score_set_score_set_id");
                });

            modelBuilder.Entity("RepairsApi.V2.Infrastructure.Communication", b =>
                {
                    b.HasOne("RepairsApi.V2.Infrastructure.CommunicationChannel", "Channel")
                        .WithMany()
                        .HasForeignKey("ChannelId")
                        .HasConstraintName("fk_communication_communication_channel_channel_id");
                });

            modelBuilder.Entity("RepairsApi.V2.Infrastructure.CustomerSatisfaction", b =>
                {
                    b.HasOne("RepairsApi.V2.Infrastructure.Party", "PartyCarryingOutSurvey")
                        .WithMany()
                        .HasForeignKey("PartyCarryingOutSurveyId")
                        .HasConstraintName("fk_customer_satisfaction_party_party_carrying_out_survey_id");

                    b.HasOne("RepairsApi.V2.Infrastructure.Party", "PartyProvidingFeedback")
                        .WithMany()
                        .HasForeignKey("PartyProvidingFeedbackId")
                        .HasConstraintName("fk_customer_satisfaction_party_party_providing_feedback_id");
                });

            modelBuilder.Entity("RepairsApi.V2.Infrastructure.JobStatusUpdate", b =>
                {
                    b.HasOne("RepairsApi.V2.Infrastructure.AdditionalWork", "AdditionalWork")
                        .WithMany()
                        .HasForeignKey("AdditionalWorkId")
                        .HasConstraintName("fk_job_status_update_additional_work_additional_work_id");

                    b.HasOne("RepairsApi.V2.Infrastructure.Communication", "CustomerCommunicationChannelAttempted")
                        .WithMany()
                        .HasForeignKey("CustomerCommunicationChannelAttemptedId")
                        .HasConstraintName("fk_job_status_update_communication_customer_communication_chan");

                    b.HasOne("RepairsApi.V2.Infrastructure.CustomerSatisfaction", "CustomerFeedback")
                        .WithMany()
                        .HasForeignKey("CustomerFeedbackId")
                        .HasConstraintName("fk_job_status_update_customer_satisfaction_customer_feedback_id");

                    b.HasOne("RepairsApi.V2.Infrastructure.WorkElement", "MoreSpecificSORCode")
                        .WithMany()
                        .HasForeignKey("MoreSpecificSORCodeId")
                        .HasConstraintName("fk_job_status_update_work_elements_more_specific_sor_code_id");

                    b.HasOne("RepairsApi.V2.Infrastructure.Appointment", "RefinedAppointmentWindow")
                        .WithMany()
                        .HasForeignKey("RefinedAppointmentWindowId")
                        .HasConstraintName("fk_job_status_update_appointment_refined_appointment_window_id");

                    b.HasOne("RepairsApi.V2.Infrastructure.WorkOrder", "RelatedWorkOrder")
                        .WithMany()
                        .HasForeignKey("RelatedWorkOrderId")
                        .HasConstraintName("fk_job_status_update_work_orders_related_work_order_id");

                    b.HasOne("RepairsApi.V2.Infrastructure.WorkOrderComplete", null)
                        .WithMany("JobStatusUpdates")
                        .HasForeignKey("WorkOrderCompleteId")
                        .HasConstraintName("fk_job_status_update_work_order_completes_work_order_complete_");
                });

            modelBuilder.Entity("RepairsApi.V2.Infrastructure.Operative", b =>
                {
                    b.HasOne("RepairsApi.V2.Infrastructure.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .HasConstraintName("fk_operative_person_person_id");

                    b.HasOne("RepairsApi.V2.Infrastructure.WorkOrderComplete", null)
                        .WithMany("OperativesUsed")
                        .HasForeignKey("WorkOrderCompleteId")
                        .HasConstraintName("fk_operative_work_order_completes_work_order_complete_id");
                });

            modelBuilder.Entity("RepairsApi.V2.Infrastructure.Person", b =>
                {
                    b.HasOne("RepairsApi.V2.Infrastructure.Identification", "Identification")
                        .WithMany()
                        .HasForeignKey("IdentificationId")
                        .HasConstraintName("fk_person_identification_identification_id");

                    b.HasOne("RepairsApi.V2.Infrastructure.JobStatusUpdate", null)
                        .WithMany("OperativesAssigned")
                        .HasForeignKey("JobStatusUpdateId")
                        .HasConstraintName("fk_person_job_status_update_job_status_update_id");

                    b.HasOne("RepairsApi.V2.Infrastructure.PersonName", "Name")
                        .WithMany()
                        .HasForeignKey("NameId")
                        .HasConstraintName("fk_person_person_name_name_id");
                });

            modelBuilder.Entity("RepairsApi.V2.Infrastructure.Point", b =>
                {
                    b.HasOne("RepairsApi.V2.Infrastructure.GeographicalLocation", null)
                        .WithMany("Polyline")
                        .HasForeignKey("GeographicalLocationId")
                        .HasConstraintName("fk_point_geographical_location_geographical_location_id");
                });

            modelBuilder.Entity("RepairsApi.V2.Infrastructure.PostalAddress", b =>
                {
                    b.HasOne("RepairsApi.V2.Infrastructure.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .HasConstraintName("fk_postal_address_address_address_id");
                });

            modelBuilder.Entity("RepairsApi.V2.Infrastructure.PropertyAddress", b =>
                {
                    b.HasOne("RepairsApi.V2.Infrastructure.PostalAddress", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .HasConstraintName("fk_property_address_postal_address_address_id");
                });

            modelBuilder.Entity("RepairsApi.V2.Infrastructure.PropertyClass", b =>
                {
                    b.HasOne("RepairsApi.V2.Infrastructure.PropertyAddress", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .HasConstraintName("fk_property_class_property_address_address_id");

                    b.HasOne("RepairsApi.V2.Infrastructure.GeographicalLocation", "GeographicalLocation")
                        .WithMany()
                        .HasForeignKey("GeographicalLocationId")
                        .HasConstraintName("fk_property_class_geographical_location_geographical_location_");

                    b.HasOne("RepairsApi.V2.Infrastructure.Site", null)
                        .WithMany("PropertyClass")
                        .HasForeignKey("SiteId")
                        .HasConstraintName("fk_property_class_site_site_id");
                });

            modelBuilder.Entity("RepairsApi.V2.Infrastructure.RateScheduleItem", b =>
                {
                    b.HasOne("RepairsApi.V2.Infrastructure.WorkElement", null)
                        .WithMany("RateScheduleItem")
                        .HasForeignKey("WorkElementId")
                        .HasConstraintName("fk_rate_schedule_items_work_elements_work_element_id");

                    b.HasOne("RepairsApi.V2.Infrastructure.WorkOrderComplete", null)
                        .WithMany("BillOfMaterialItem")
                        .HasForeignKey("WorkOrderCompleteId")
                        .HasConstraintName("fk_rate_schedule_items_work_order_completes_work_order_complet");

                    b.OwnsOne("RepairsApi.V2.Infrastructure.Quantity", "Quantity", b1 =>
                        {
                            b1.Property<Guid>("RateScheduleItemId")
                                .HasColumnName("id")
                                .HasColumnType("uuid");

                            b1.Property<double>("Amount")
                                .HasColumnName("amount")
                                .HasColumnType("double precision");

                            b1.Property<int?>("UnitOfMeasurementCode")
                                .HasColumnName("unit_of_measurement_code")
                                .HasColumnType("integer");

                            b1.HasKey("RateScheduleItemId")
                                .HasName("pk_rate_schedule_items");

                            b1.ToTable("rate_schedule_items");

                            b1.WithOwner()
                                .HasForeignKey("RateScheduleItemId")
                                .HasConstraintName("fk_quantity_rate_schedule_items_rate_schedule_item_id");
                        });
                });

            modelBuilder.Entity("RepairsApi.V2.Infrastructure.Score", b =>
                {
                    b.HasOne("RepairsApi.V2.Infrastructure.ScoreSet", null)
                        .WithMany("Score")
                        .HasForeignKey("ScoreSetId")
                        .HasConstraintName("fk_score_score_set_score_set_id");
                });

            modelBuilder.Entity("RepairsApi.V2.Infrastructure.ScoreSet", b =>
                {
                    b.HasOne("RepairsApi.V2.Infrastructure.CustomerSatisfaction", null)
                        .WithMany("FeedbackSet")
                        .HasForeignKey("CustomerSatisfactionId")
                        .HasConstraintName("fk_score_set_customer_satisfaction_customer_satisfaction_id");
                });

            modelBuilder.Entity("RepairsApi.V2.Infrastructure.Site", b =>
                {
                    b.HasOne("RepairsApi.V2.Infrastructure.GeographicalLocation", "GeographicalLocation")
                        .WithMany()
                        .HasForeignKey("GeographicalLocationId")
                        .HasConstraintName("fk_site_geographical_location_geographical_location_id");
                });

            modelBuilder.Entity("RepairsApi.V2.Infrastructure.Trade", b =>
                {
                    b.HasOne("RepairsApi.V2.Infrastructure.Operative", null)
                        .WithMany("Trade")
                        .HasForeignKey("OperativeId")
                        .HasConstraintName("fk_trade_operative_operative_id");

                    b.HasOne("RepairsApi.V2.Infrastructure.WorkElement", null)
                        .WithMany("Trade")
                        .HasForeignKey("WorkElementId")
                        .HasConstraintName("fk_trade_work_elements_work_element_id");
                });

            modelBuilder.Entity("RepairsApi.V2.Infrastructure.Unit", b =>
                {
                    b.HasOne("RepairsApi.V2.Infrastructure.PropertyAddress", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .HasConstraintName("fk_unit_property_address_address_id");

                    b.HasOne("RepairsApi.V2.Infrastructure.PropertyClass", null)
                        .WithMany("Unit")
                        .HasForeignKey("PropertyClassId")
                        .HasConstraintName("fk_unit_property_class_property_class_id");

                    b.OwnsOne("RepairsApi.V2.Infrastructure.KeySafe", "KeySafe", b1 =>
                        {
                            b1.Property<int>("UnitId")
                                .HasColumnName("id")
                                .HasColumnType("integer");

                            b1.Property<string>("Code")
                                .HasColumnName("key_safe_code")
                                .HasColumnType("text");

                            b1.Property<string>("Location")
                                .HasColumnName("key_safe_location")
                                .HasColumnType("text");

                            b1.HasKey("UnitId")
                                .HasName("pk_unit");

                            b1.ToTable("unit");

                            b1.WithOwner()
                                .HasForeignKey("UnitId")
                                .HasConstraintName("fk_unit_unit_id");
                        });
                });

            modelBuilder.Entity("RepairsApi.V2.Infrastructure.WorkClass", b =>
                {
                    b.HasOne("RepairsApi.V2.Infrastructure.WorkClassSubType", "WorkClassSubType")
                        .WithMany()
                        .HasForeignKey("WorkClassSubTypeId")
                        .HasConstraintName("fk_work_class_work_class_sub_type_work_class_sub_type_id");
                });

            modelBuilder.Entity("RepairsApi.V2.Infrastructure.WorkElement", b =>
                {
                    b.HasOne("RepairsApi.V2.Infrastructure.JobStatusUpdate", null)
                        .WithMany("RelatedWorkElement")
                        .HasForeignKey("JobStatusUpdateId")
                        .HasConstraintName("fk_work_elements_job_status_update_job_status_update_id");

                    b.HasOne("RepairsApi.V2.Infrastructure.Operative", null)
                        .WithMany("WorkElement")
                        .HasForeignKey("OperativeId")
                        .HasConstraintName("fk_work_elements_operative_operative_id");

                    b.HasOne("RepairsApi.V2.Infrastructure.WorkOrderComplete", null)
                        .WithMany("CompletedWorkElements")
                        .HasForeignKey("WorkOrderCompleteId")
                        .HasConstraintName("fk_work_elements_work_order_completes_work_order_complete_id");

                    b.HasOne("RepairsApi.V2.Infrastructure.WorkOrder", null)
                        .WithMany("WorkElements")
                        .HasForeignKey("WorkOrderId")
                        .HasConstraintName("fk_work_elements_work_orders_work_order_id");
                });

            modelBuilder.Entity("RepairsApi.V2.Infrastructure.WorkElementDependency", b =>
                {
                    b.HasOne("RepairsApi.V2.Infrastructure.Dependency", "Dependency")
                        .WithMany()
                        .HasForeignKey("DependencyId")
                        .HasConstraintName("fk_work_element_dependency_dependency_dependency_id");

                    b.HasOne("RepairsApi.V2.Infrastructure.WorkElement", "DependsOnWorkElement")
                        .WithMany("DependsOn")
                        .HasForeignKey("DependsOnWorkElementId")
                        .HasConstraintName("fk_work_element_dependency_work_elements_depends_on_work_eleme");
                });

            modelBuilder.Entity("RepairsApi.V2.Infrastructure.WorkOrder", b =>
                {
                    b.HasOne("RepairsApi.V2.Infrastructure.WorkOrderAccessInformation", "AccessInformation")
                        .WithMany()
                        .HasForeignKey("AccessInformationId")
                        .HasConstraintName("fk_work_orders_work_order_access_information_access_informatio");

                    b.HasOne("RepairsApi.V2.Infrastructure.Site", "Site")
                        .WithMany()
                        .HasForeignKey("SiteId")
                        .HasConstraintName("fk_work_orders_site_site_id");

                    b.HasOne("RepairsApi.V2.Infrastructure.WorkClass", "WorkClass")
                        .WithMany()
                        .HasForeignKey("WorkClassId")
                        .HasConstraintName("fk_work_orders_work_class_work_class_id");

                    b.HasOne("RepairsApi.V2.Infrastructure.WorkOrderComplete", null)
                        .WithMany("FollowOnWorkOrder")
                        .HasForeignKey("WorkOrderCompleteId")
                        .HasConstraintName("fk_work_orders_work_order_completes_work_order_complete_id");

                    b.HasOne("RepairsApi.V2.Infrastructure.WorkPriority", "WorkPriority")
                        .WithMany()
                        .HasForeignKey("WorkPriorityId")
                        .HasConstraintName("fk_work_orders_work_priorities_work_priority_id");
                });

            modelBuilder.Entity("RepairsApi.V2.Infrastructure.WorkOrderAccessInformation", b =>
                {
                    b.OwnsOne("RepairsApi.V2.Infrastructure.KeySafe", "Keysafe", b1 =>
                        {
                            b1.Property<int>("WorkOrderAccessInformationId")
                                .HasColumnName("id")
                                .HasColumnType("integer");

                            b1.Property<string>("Code")
                                .HasColumnName("keysafe_code")
                                .HasColumnType("text");

                            b1.Property<string>("Location")
                                .HasColumnName("keysafe_location")
                                .HasColumnType("text");

                            b1.HasKey("WorkOrderAccessInformationId")
                                .HasName("pk_work_order_access_information");

                            b1.ToTable("work_order_access_information");

                            b1.WithOwner()
                                .HasForeignKey("WorkOrderAccessInformationId")
                                .HasConstraintName("fk_work_order_access_information_work_order_access_information");
                        });
                });

            modelBuilder.Entity("RepairsApi.V2.Infrastructure.WorkOrderComplete", b =>
                {
                    b.HasOne("RepairsApi.V2.Infrastructure.WorkOrder", "WorkOrder")
                        .WithMany()
                        .HasForeignKey("WorkOrderId")
                        .HasConstraintName("fk_work_order_completes_work_orders_work_order_id");
                });
#pragma warning restore 612, 618
        }
    }
}
