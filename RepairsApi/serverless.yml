service: repairs-api
provider:
  name: aws
  runtime: dotnetcore3.1
  memorySize: 2048
  vpc: ${self:custom.vpc.${opt:stage}}
  stage: ${opt:stage}
  region: eu-west-2
  timeout: 15
  apiKeys:
    - secureAccess:
      - api-key-${self:service}-${self:provider.stage}
  usagePlan:
    - secureAccess:
        throttle:
          burstLimit: 200
          rateLimit: 100
  tracing:
    lambda: true
    apiGateway: true
  resourcePolicy:
    - Effect: Allow
      Principal: "*"
      Action: execute-api:Invoke
      Resource:
        - ${ssm:/${self:service}/${self:provider.stage}/api-gateway-resource-arn}
    - Effect: Deny
      Principal: "*"
      Action: execute-api:Invoke
      Resource:
        - ${ssm:/${self:service}/${self:provider.stage}/drs-receiver-arn}
      Condition:
        NotIpAddress:
          aws:SourceIp: ${ssm:/${self:service}/${self:provider.stage}/drs-receiver-allow-ips~split}

package:
  artifact: ./bin/release/netcoreapp3.1/repairs-api.zip

functions:
  RepairsApi:
    name: ${self:service}-${self:provider.stage}
    handler: RepairsApi::RepairsApi.LambdaEntryPoint::FunctionHandlerAsync
    role: lambdaExecutionRole
    environment:
      CONNECTION_STRING: Host=${ssm:/repairs-api/${self:provider.stage}/postgres-hostname};Port=${ssm:/repairs-api/${self:provider.stage}/postgres-port};Database=${ssm:/repairs-api/${self:provider.stage}/postgres-database};Username=${ssm:/repairs-api/${self:provider.stage}/postgres-username};Password=${ssm:/repairs-api/${self:provider.stage}/postgres-password}
      GatewayOptions__PropertiesAPI: ${ssm:/${self:service}/${self:provider.stage}/properties-api-url}
      GatewayOptions__PropertiesAPIKey: ${ssm:/${self:service}/${self:provider.stage}/properties-api-token}
      GatewayOptions__AlertsAPI: ${ssm:/${self:service}/${self:provider.stage}/alerts-api-url}
      GatewayOptions__AlertsAPIKey: ${ssm:/${self:service}/${self:provider.stage}/alerts-api-token}
      GatewayOptions__TenancyApi: ${ssm:/${self:service}/${self:provider.stage}/tenancy-api-url}
      GatewayOptions__TenancyApiKey: ${ssm:/${self:service}/${self:provider.stage}/tenancy-api-token}
      GatewayOptions__HousingResidentInformationApi: ${ssm:/${self:service}/${self:provider.stage}/housing-resident-information-api-url}
      GatewayOptions__HousingResidentInformationApiKey: ${ssm:/${self:service}/${self:provider.stage}/housing-resident-information-api-token}
      FeatureManagement__SpendLimits: ${ssm:/${self:service}/${self:provider.stage}/spend-limits-flag}
      FeatureManagement__DrsIntegration: ${ssm:/${self:service}/${self:provider.stage}/drs-enabled}
      FeatureManagement__NotifyIntegration: ${ssm:/${self:service}/${self:provider.stage}/notify-enabled}
      FeatureManagement__EnforceAssignedOperative: ${ssm:/${self:service}/${self:provider.stage}/enforce-assigned-operative-enabled}
      FeatureManagement__UpdateOperativesOnWorkOrderGet: ${ssm:/${self:service}/${self:provider.stage}/update-operatives-on-workorder-get}
      DrsOptions__APIAddress: ${ssm:/${self:service}/${self:provider.stage}/drs-api-address}
      DrsOptions__ManagementAddress: ${ssm:/${self:service}/${self:provider.stage}/drs-management-address}
      DrsOptions__Login: ${ssm:/${self:service}/${self:provider.stage}/drs-login}
      DrsOptions__Password: ${ssm:/${self:service}/${self:provider.stage}/drs-password}
      NotifyOptions__ApiKey: ${ssm:/${self:service}/${self:provider.stage}/notify-api-key}
      NotifyOptions__TemplateIds: ${ssm:/${self:service}/${self:provider.stage}/notify-template-ids}
      EmailOptions__PendingWorkOrderRecipient: ${ssm:/${self:service}/${self:provider.stage}/email-pending-wo-address}
    events:
      - http:
          path: /{proxy+}
          method: ANY
          private: true
      - http:
          path: /Service.asmx
          method: ANY
resources:
  Resources:
    lambdaExecutionRole:
      Type: AWS::IAM::Role
      Properties:
        Path: /${self:service}/${self:provider.stage}/
        RoleName: ${self:service}-lambdaExecutionRole
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
          - arn:aws:iam::aws:policy/AWSXRayDaemonWriteAccess
        Policies:
          - PolicyName: manageLogs
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                  Resource:
                    - 'Fn::Join':
                        - ':'
                        - - 'arn:aws:logs'
                          - Ref: 'AWS::Region'
                          - Ref: 'AWS::AccountId'
                          - 'log-group:/aws/lambda/*:*:*'
                - Effect: "Allow"
                  Action:
                    - "s3:PutObject"
                    - "s3:GetObject"
                  Resource:
                    Fn::Join:
                      - ""
                      - - "arn:aws:s3:::"
                        - "Ref": "ServerlessDeploymentBucket"
          - PolicyName: lambdaInvocation
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - "lambda:InvokeFunction"
                  Resource: "*"
custom:
  vpc:
    development:
      securityGroupIds:
        - sg-08e28776da7918e4b
      subnetIds:
        - subnet-0140d06fb84fdb547
        - subnet-05ce390ba88c42bfd
    staging:
      securityGroupIds:
        - sg-011122be56aa0af9e
      subnetIds:
        - subnet-06d3de1bd9181b0d7
        - subnet-0ed7d7713d1127656
    production:
      securityGroupIds:
        - sg-0ec487b8798809285
      subnetIds:
        - subnet-0beb266003a56ca82
        - subnet-06a697d86a9b6ed01
